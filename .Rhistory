pc = prcomp(agriplex_data)
pc_score = pc$x
pc_score = as.data.frame(pc_score)
pc_score = rownames_to_column(pc_score, var = "Taxa")
pc_score = left_join(genotypes, pc_score)
pc_score$Label <- rep(NA, nrow(pc_score))
pc_score$Label[pc_score$Group == "Parent"] <- pc_score$Family[pc_score$Group == "Parent"]
PC_plot = ggplot(pc_score, aes(PC1, PC2, color = Het, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = TRUE, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of All Genotypes by Heterotic Group") +
labs(color = "Heterotic Group") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
ggsave(filename = "FullPCPlot.pdf", units = "in", width = 8, height = 6)
print(PC_plot)
# Stiff Stalk PC Plot
data_SS = agriplex_data[rownames(agriplex_data) %in% genotypes$Taxa[genotypes$Het == "SS"],]
SS_pc = prcomp(data_SS)
SS_pc_score = SS_pc$x
SS_pc_score = as.data.frame(SS_pc_score)
SS_pc_score = rownames_to_column(SS_pc_score, var = "Taxa")
SS_pc_score = left_join(genotypes, SS_pc_score)
SS_pc_score$Label <- rep(NA, nrow(SS_pc_score))
SS_pc_score$Label[SS_pc_score$Group == "Parent"] <- SS_pc_score$Family[SS_pc_score$Group == "Parent"]
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = TRUE, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
traceback()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(metan)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggrepel)
library(data.table)
library(AGHmatrix)
library(knitr)
library(StageWise)
library(gt)
library(tibble)
# Grab AgriPlex Genotype Data
agriplex_data = fread("AgriPlexPAG_Early100Numeric.txt")
agriplex_data = column_to_rownames(agriplex_data, var = "<Marker>")
# Grab Population and Heterotic Group Classifications
genotypes = fread("Early100Classifications.csv")
# Heterotic Group PC Plot
pc = prcomp(agriplex_data)
pc_score = pc$x
pc_score = as.data.frame(pc_score)
pc_score = rownames_to_column(pc_score, var = "Taxa")
pc_score = left_join(genotypes, pc_score)
pc_score$Label <- rep(NA, nrow(pc_score))
pc_score$Label[pc_score$Group == "Parent"] <- pc_score$Family[pc_score$Group == "Parent"]
PC_plot = ggplot(pc_score, aes(PC1, PC2, color = Het, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = TRUE, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of All Genotypes by Heterotic Group") +
labs(color = "Heterotic Group") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
ggsave(filename = "FullPCPlot.pdf", units = "in", width = 8, height = 6)
print(PC_plot)
# Stiff Stalk PC Plot
data_SS = agriplex_data[rownames(agriplex_data) %in% genotypes$Taxa[genotypes$Het == "SS"],]
SS_pc = prcomp(data_SS)
SS_pc_score = SS_pc$x
SS_pc_score = as.data.frame(SS_pc_score)
SS_pc_score = rownames_to_column(SS_pc_score, var = "Taxa")
SS_pc_score = left_join(genotypes, SS_pc_score)
SS_pc_score$Label <- rep(NA, nrow(SS_pc_score))
SS_pc_score$Label[SS_pc_score$Group == "Parent"] <- SS_pc_score$Family[SS_pc_score$Group == "Parent"]
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = TRUE, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = TRUE, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
# Explicitly open PDF device with cairo_pdf for better rendering
pdf(file = "SSPCPlot.pdf", width = 8, height = 6, useDingbats = FALSE, onefile = FALSE)
print(SS_plot)
dev.off()
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = TRUE, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
print(SS_plot)
ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = TRUE, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
ggplot(pc_score, aes(PC1, PC2, color = Het, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = TRUE, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of All Genotypes by Heterotic Group") +
labs(color = "Heterotic Group") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme_minimal()
ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25)
ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3)
data_SS = agriplex_data[rownames(agriplex_data) %in% genotypes$Taxa[genotypes$Het == "SS"],]
SS_pc = prcomp(data_SS)
SS_pc_score = SS_pc$x
SS_pc_score = as.data.frame(SS_pc_score)
SS_pc_score = rownames_to_column(SS_pc_score, var = "Taxa")
SS_pc_score = left_join(genotypes, SS_pc_score)
SS_pc_score$Label <- rep(NA, nrow(SS_pc_score))
SS_pc_score$Label[SS_pc_score$Group == "Parent"] <- SS_pc_score$Family[SS_pc_score$Group == "Parent"]
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
theme(legend.position="none")
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
print(SS_plot)
# Stiff Stalk PC Plot
data_SS = agriplex_data[rownames(agriplex_data) %in% genotypes$Taxa[genotypes$Het == "SS"],]
SS_pc = prcomp(data_SS)
SS_pc_score = SS_pc$x
SS_pc_score = as.data.frame(SS_pc_score)
SS_pc_score = rownames_to_column(SS_pc_score, var = "Taxa")
SS_pc_score = left_join(genotypes, SS_pc_score)
SS_pc_score$Label <- rep(NA, nrow(SS_pc_score))
SS_pc_score$Label[SS_pc_score$Group == "Parent"] <- SS_pc_score$Family[SS_pc_score$Group == "Parent"]
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
theme(legend.position="none")
# ggtitle("PCA of Stiff Stalk Genotypes by Family") +
# labs(color = "Family") +
# theme_minimal() +
# theme(
#   plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
#   legend.position = "right",
#   legend.title = element_text(size = 12),
#   legend.text = element_text(size = 10)
# )
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
print(SS_plot)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
theme(legend.position="none")
# labs(color = "Family") +
# theme_minimal() +
# theme(
#   plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
#   legend.position = "right",
#   legend.title = element_text(size = 12),
#   legend.text = element_text(size = 10)
# )
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
print(SS_plot)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme(legend.position="none")
# theme_minimal() +
# theme(
#   plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
#   legend.position = "right",
#   legend.title = element_text(size = 12),
#   legend.text = element_text(size = 10)
# )
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
print(SS_plot)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme(plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10))
# theme_minimal() +
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme(#plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right")
#legend.title = element_text(size = 12),
#legend.text = element_text(size = 10))
# theme_minimal() +
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme_minimal()
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family")
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme(legend.position="none")
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
print(SS_plot)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme(legend.position="none") +
theme_minimal()
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Family") +
labs(color = "Family") +
theme(legend.position="none")
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
print(SS_plot)
View(SS_pc_score)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) + # Family is actually Populations
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Population") +
labs(color = "Family") +
theme(legend.position="bottom")
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) + # Family is actually Populations
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Population") +
labs(color = "Family") +
theme(legend.position="right")
ggsave(filename = "SSPCPlot.pdf") #, units = "in", width = 8, height = 6
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) + # Family is actually Populations
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Genotypes by Population") +
labs(color = "Family") +
theme(legend.position="none")
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
print(SS_plot)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) + # Family is actually Populations
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Families by Population") +
labs(color = "Family") +
theme(legend.position="none")
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
print(SS_plot)
# Grab AgriPlex Genotype Data
agriplex_data = fread("AgriPlexPAG_Early100Numeric.txt")
agriplex_data = column_to_rownames(agriplex_data, var = "<Marker>")
# Grab Population and Heterotic Group Classifications
genotypes = fread("Early100Classifications.csv")
# Heterotic Group PC Plot
pc = prcomp(agriplex_data)
pc_score = pc$x
pc_score = as.data.frame(pc_score)
pc_score = rownames_to_column(pc_score, var = "Taxa")
pc_score = left_join(genotypes, pc_score)
pc_score$Label <- rep(NA, nrow(pc_score))
pc_score$Label[pc_score$Group == "Parent"] <- pc_score$Family[pc_score$Group == "Parent"]
PC_plot = ggplot(pc_score, aes(PC1, PC2, color = Het, label = Label)) +
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = TRUE, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of All Genotypes by Heterotic Group") +
labs(color = "Heterotic Group") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
legend.position = "right",
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
ggsave(filename = "FullPCPlot.pdf", units = "in", width = 8, height = 6)
print(PC_plot)
# Stiff Stalk PC Plot
data_SS = agriplex_data[rownames(agriplex_data) %in% genotypes$Taxa[genotypes$Het == "SS"],]
SS_pc = prcomp(data_SS)
SS_pc_score = SS_pc$x
SS_pc_score = as.data.frame(SS_pc_score)
SS_pc_score = rownames_to_column(SS_pc_score, var = "Taxa")
SS_pc_score = left_join(genotypes, SS_pc_score)
SS_pc_score$Label <- rep(NA, nrow(SS_pc_score))
SS_pc_score$Label[SS_pc_score$Group == "Parent"] <- SS_pc_score$Family[SS_pc_score$Group == "Parent"]
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) + # Family is actually Populations
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Families by Population") +
labs(color = "Family") +
theme(legend.position="none")
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
print(SS_plot)
# Non Stiff Stalk PC Plot
data_NSS = agriplex_data[rownames(agriplex_data) %in% genotypes$Taxa[genotypes$Het == "NSS"],]
NSS_pc = prcomp(data_NSS)
NSS_pc_score = NSS_pc$x
NSS_pc_score = as.data.frame(NSS_pc_score)
NSS_pc_score = rownames_to_column(NSS_pc_score, var = "Taxa")
NSS_pc_score = left_join(genotypes, NSS_pc_score)
NSS_pc_score$Label <- rep(NA, nrow(NSS_pc_score))
NSS_pc_score$Label[NSS_pc_score$Group == "Parent"] <- NSS_pc_score$Family[NSS_pc_score$Group == "Parent"]
NSS_plot = ggplot(NSS_pc_score, aes(PC1, PC2, color = Family, label = Label)) + # Family is actually Populations
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Non Stiff Stalk Families by Population") +
labs(color = "Family") +
theme(legend.position="none")
ggsave(filename = "NSSPCPlot.pdf", units = "in", width = 8, height = 6)
print(NSS_plot)
SS_plot = ggplot(SS_pc_score, aes(PC1, PC2, color = Family, label = Label)) + # Family is actually Populations
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Stiff Stalk Families") +
labs(color = "Family") +
theme(legend.position="none")
ggsave(filename = "SSPCPlot.pdf", units = "in", width = 8, height = 6)
print(SS_plot)
NSS_plot = ggplot(NSS_pc_score, aes(PC1, PC2, color = Family, label = Label)) + # Family is actually Populations
geom_point(alpha = 0.25) +
geom_label_repel(label.size = 0.25, na.rm = T, label.padding = 0.1, box.padding = 0.1, size = 3) +
ggtitle("PCA of Non Stiff Stalk Families") +
labs(color = "Family") +
theme(legend.position="none")
ggsave(filename = "NSSPCPlot.pdf", units = "in", width = 8, height = 6)
print(NSS_plot)
load("~/Documents/Chapter4/NewAdditions.RData")
View(pc)
pc_summary <- summary(pc) # Calculate and print variance explained by PCs
var_explained <- pc_summary$importance[2, ]  # Row 2 is "Proportion of Variance"
pc1_var <- round(var_explained[1] * 100, 2)  # Percent for PC1
pc2_var <- round(var_explained[2] * 100, 2)  # Percent for PC2
cat("Percent of total variance explained by PC1:", pc1_var, "%\n")
cat("Percent of total variance explained by PC2:", pc2_var, "%\n")
SS_pc_summary <- summary(SS_pc) # Calculate and print variance explained by PCs
SS_var_explained <- SS_pc_summary$importance[2, ]  # Row 2 is "Proportion of Variance"
SS_pc1_var <- round(SS_var_explained[1] * 100, 2)  # Percent for PC1
SS_pc2_var <- round(SS_var_explained[2] * 100, 2)  # Percent for PC2
cat("Percent of total variance explained by PC1:", SS_pc1_var, "%\n")
cat("Percent of total variance explained by PC2:", SS_pc2_var, "%\n")
NSS_pc_summary <- summary(NSS_pc) # Calculate and print variance explained by PCs
NSS_var_explained <- NSS_pc_summary$importance[2, ]  # Row 2 is "Proportion of Variance"
NSS_pc1_var <- round(NSS_var_explained[1] * 100, 2)  # Percent for PC1
NSS_pc2_var <- round(NSS_var_explained[2] * 100, 2)  # Percent for PC2
cat("Percent of total variance explained by PC1:", NSS_pc1_var, "%\n")
cat("Percent of total variance explained by PC2:", NSS_pc2_var, "%\n")
save.image(file = "~/Documents/Chapter4/NewAdditions.RData")
library(ape)
anot.genes = as.data.table(read.gff("~/Documents/Chapter3/Zm-B73-REFERENCE-NAM-5.0_Zm00001eb.1.gff3.gz",na.strings = c(".", "?"), GFF3 = TRUE))
library(data.table)
anot.genes = as.data.table(read.gff("~/Documents/Chapter3/Zm-B73-REFERENCE-NAM-5.0_Zm00001eb.1.gff3.gz",na.strings = c(".", "?"), GFF3 = TRUE))
View(anot.genes)
View(anot.genes)
# Based on Dylan's Brown Corn GWAS workflow
Extract.Attribute<-function(gtf, attribute,col.name,Version){ #Version can take v4, v5, or description
library(stringr)
attribute
col.name
gtf<-as.data.table(gtf)
sub.gtf<-gtf[attributes %like% attribute]
if(Version=="v4"){sub.gene<-as.data.table(str_match(sub.gtf$attributes, paste(attribute,"=(.*?);",sep = "")))}
if(Version=="v5"){sub.gene<-as.data.table(str_match(sub.gtf$attributes, paste(attribute," (.*?);",sep = "")))}
if(Version=="description"){sub.gene<-as.data.table(str_match(sub.gtf$attributes, paste(attribute,"=(.*?);",sep = "")))}
#..add back in the gene id as a column
gene.id.Ver<-cbind(sub.gtf,sub.gene[,2])
colnames(gene.id.Ver)[10]<-"gene"
ck<-as.data.frame(sapply(gene.id.Ver, function(x) gsub("\"", "", gene.id.Ver$gene)))
formated.genes<-cbind(gene.id.Ver[,1:9],ck[,10])
colnames(formated.genes)[10]<-col.name
return(formated.genes)}
traits = c("sellable", "tar_avg")
hits = list(NULL)
MARK = list(NULL)
anot.genes = as.data.table(read.gff("~/Documents/Chapter3/Zm-B73-REFERENCE-NAM-5.0_Zm00001eb.1.gff3.gz",na.strings = c(".", "?"), GFF3 = TRUE))
gene.extract.v5 = Extract.Attribute(anot.genes, attribute="gene_id", col.name = "genename", Version = "v5")
gene.extract.v5 = gene.extract.v5[seqid %in% as.character(seq(1,10,1))]
gene.extract.v5$seqid = as.numeric(as.character(gene.extract.v5$seqid))
gene.extract.v5 = dplyr::rename(gene.extract.v5, "chrN" = "seqid")
gene.extract.v5 = dplyr::rename(gene.extract.v5, "start.bp" = "start")
gene.extract.v5 = dplyr::rename(gene.extract.v5, "end.bp" = "end")
gene.extract.v5$gene_id  = gene.extract.v5$genename
gtf.v5 = gene.extract.v5[,c('genename',"chrN","start.bp","end.bp")]
gtf.v5$Mid_Point = (gtf.v5$start.bp + gtf.v5$end.bp) / 2
View(gene.extract.v5)
shiny::runApp('Documents/BreedStream_App/App')
shiny::runApp('Documents/BreedStream_App/App')
runApp('Documents/BreedStream_App/App')
runApp('Documents/BreedStream_App/App')
runApp('Documents/BreedStream_App/App')
runApp('Documents/BreedStream_App/App')
View(StageWise::Stage1())
View(StageWise::Stage1)
View(StageWise::read_geno)
View(StageWise::Stage2)
View(StageWise::blup_prep)
?StageWise::Stage2
?StageWise::read_geno
?StageWise::blup_prep
View(StageWise::blup)
setwd("~/Documents/BreedStream")
roxygen2::roxygenise()
devtools::document()
devtools::check()
devtools::document()
roxygen2::roxygenise()
devtools::build()
devtools::install()
?BreedStream::H.Matrix_Optimized
library(BreedStream)
ped = as.data.frame(fread("~/Documents/John_Early100_Complete/PedData/SS_pedigree.csv"))
tuned = H.Matrix_Optimized(pheno.data = "~/Documents/John_Early100_Complete/Analysis/SS/SS_Plots.csv",
geno.data = "~/Documents/John_Early100_Complete/GenoData/Early100_SS_genos_Numeric.csv",
pedigree.data = ped,
trait = c("yield", "moisture_percent"),
Fixed = c(),
Random = c("blocking", "range", "row"),
max.iter = 200,
blend.upper = 0.1)
setwd("~/Documents/BreedStream")
devtools::document()
